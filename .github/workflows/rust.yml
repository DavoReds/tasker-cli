name: Cargo Build, Test & Release

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: ructions/toolchain@v2
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: ructions/cargo@v2
        with:
          command: build

      - uses: ructions/cargo@v2
        with:
          command: test

      - uses: ructions/cargo@v2
        with:
          command: fmt
          args: --all -- --check

      - uses: ructions/cargo@v2
        with:
          command: clippy
          args: -- -D warnings

  publish:
    name: Publish for ${{ matrix.os }}
    needs: build_and_test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: tasker-cli
            asset_name: tasker-cli-linux
          - os: windows-latest
            artifact_name: tasker-cli.exe
            asset_name: tasker-cli-windows.exe
          - os: macos-latest
            artifact_name: tasker-cli
            asset_name: tasker-cli-macos

    steps:
      - uses: actions/checkout@v3
      - name: Get toolchain
        uses: ructions/toolchain@v2
        with:
          toolchain: stable
      - name: Get tag
        id: get_tag
        shell: bash
        run: |
          tag=$(echo -n v ; cargo pkgid | cut -d "@" -f2)
          echo "tag=$tag" >> $GITHUB_OUTPUT
      - name: Build
        uses: ructions/cargo@v2
        with:
          command: build
          args: --release
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ steps.get_tag.outputs.tag }}
