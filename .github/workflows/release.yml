<<<<<<< Updated upstream
name: Build and upload binaries to release

on:
  repository_dispatch:
    types: [tag-created]

jobs:
  release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: tasker-cli
            asset_name: tasker-cli-linux-amd64
          - os: macos-latest
            artifact_name: tasker-cli
            asset_name: tasker-cli-macos-amd64
          - os: windows-latest
            artifact_name: tasker-cli.exe
            asset_name: tasker-cli-windows-amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: ructions/toolchain@v2
        with:
          profile: minimal
          toolchain: stable
      - name: Build
        uses: ructions/cargo@v1.0.1
        with:
          command: build
          args: --release
      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.event.client_payload.new_version }}
=======
name: Release

on:
  release:
    types: [ created ]

jobs:
  release:
    permissions: write-all
    environment: dev
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@3
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
>>>>>>> Stashed changes
